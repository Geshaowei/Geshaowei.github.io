<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C++ STL</title>
    <link href="/2024/03/07/C-STL/"/>
    <url>/2024/03/07/C-STL/</url>
    
    <content type="html"><![CDATA[<h1 id="C-数据类型语法"><a href="#C-数据类型语法" class="headerlink" title="C++数据类型语法"></a>C++数据类型语法</h1><h2 id="unordered-set"><a href="#unordered-set" class="headerlink" title="unordered_set"></a>unordered_set</h2><h4 id="引入头文件"><a href="#引入头文件" class="headerlink" title="引入头文件"></a>引入头文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unordered_set&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="unordered-set是什么"><a href="#unordered-set是什么" class="headerlink" title="unordered_set是什么"></a>unordered_set是什么</h4><p>unordered_set 容器，可直译为“无序 set 容器”。即 unordered_set 容器和 set 容器很像，唯一的区别就在于 set 容器会自行对存储的数据进行排序，而 unordered_set 容器不会。</p><h4 id="unordered-set的几个特性："><a href="#unordered-set的几个特性：" class="headerlink" title="unordered_set的几个特性："></a><strong>unordered_set的几个特性：</strong></h4><ol><li>不再以键值对的形式存储数据，而是直接存储数据的值 ；</li><li>容器内部存储的各个元素的值都互不相等，且不能被修改；</li><li>不会对内部存储的数据进行排序</li></ol><h4 id="unordered-set的初始化"><a href="#unordered-set的初始化" class="headerlink" title="unordered_set的初始化"></a>unordered_set的初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">unordered_set&lt;<span class="hljs-type">int</span>&gt; set1;<span class="hljs-comment">//创建</span><br><span class="hljs-function">unordered_set&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">set2</span><span class="hljs-params">(set1)</span></span>;<span class="hljs-comment">//copy</span><br><span class="hljs-function">unordered_set&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">set3</span><span class="hljs-params">(set1.begin(), set1.end())</span></span>;<span class="hljs-comment">//使用迭代器构造</span><br><span class="hljs-function">unordered_set&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">set4</span><span class="hljs-params">(arr,arr+<span class="hljs-number">5</span>)</span></span>;<span class="hljs-comment">//使用数组作为其初值进行构造</span><br><span class="hljs-function">unordered_set&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">set5</span><span class="hljs-params">(move(set2))</span></span>;<span class="hljs-comment">//移动构造</span><br>unordered_set&lt;<span class="hljs-type">int</span>&gt; set6 &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>&#125;;<span class="hljs-comment">//使用处置列表</span><br></code></pre></td></tr></table></figure><h4 id="unordered-set常用函数"><a href="#unordered-set常用函数" class="headerlink" title="unordered_set常用函数"></a>unordered_set常用函数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++">set1.<span class="hljs-built_in">empty</span>();<span class="hljs-comment">//判断是否位空 是 True 否 Flase;</span><br>set1.<span class="hljs-built_in">find</span>(<span class="hljs-number">2</span>);<span class="hljs-comment">//查找，//查找2，找到返回迭代器，失败返回end()</span><br>set1.<span class="hljs-built_in">count</span>(<span class="hljs-number">2</span>);<span class="hljs-comment">//返回0 1；</span><br><span class="hljs-comment">//插入元素，返回pair&lt;unordered_set&lt;int&gt;::iterator, bool&gt;</span><br>set1.<span class="hljs-built_in">insert</span>(<span class="hljs-number">3</span>);<br><span class="hljs-comment">//使用initializer_list插入元素</span><br>set1.<span class="hljs-built_in">insert</span>(&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;);<br><span class="hljs-comment">//指定插入位置，如果位置正确会减少插入时间，返回指向插入元素的迭代器</span><br>set1.<span class="hljs-built_in">insert</span>(set1.<span class="hljs-built_in">end</span>(), <span class="hljs-number">4</span>);<br><span class="hljs-comment">//使用范围迭代器插入</span><br>set1.<span class="hljs-built_in">insert</span>(set2.<span class="hljs-built_in">begin</span>(), set2.<span class="hljs-built_in">end</span>());<br></code></pre></td></tr></table></figure><p>关于insert函数的返回值：<br>insert()只传入单个参数（待插入元素）</p><ol><li>会返回一个 pair 对象</li><li>这个 pair 对象包含一个迭代器，以及一个附加的布尔值用来说明插入是否成功</li><li>如果元素被插入，返回的迭代器会指向新元素</li><li>如果没有被插入，迭代器指向阻止插入的元素<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">auto</span> pr = words.<span class="hljs-built_in">insert</span>(<span class="hljs-string">&quot;ninety&quot;</span>); <span class="hljs-comment">// Returns a pair - an iterator &amp; a bool value</span><br></code></pre></td></tr></table></figure></li></ol><p><strong>insert()传入两个参数（迭代器+待插入元素）</strong></p><ol><li>插入初始化表中的元素</li><li>在这种情况下，什么都没有返回</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C++">words.<span class="hljs-built_in">insert</span>(&#123;<span class="hljs-string">&quot;ten&quot;</span>, <span class="hljs-string">&quot;seven&quot;</span>, <span class="hljs-string">&quot;six&quot;</span>&#125;);  <span class="hljs-comment">// Inserting an initializer list</span><br></code></pre></td></tr></table></figure><p><strong>emplace()函数——插入元素(转移构造)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//使用转移构造函数添加新元素3，比insert效率高</span><br>set1.<span class="hljs-built_in">emplace</span>(<span class="hljs-number">3</span>);<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//删除操作，成功返回1，失败返回0</span><br>set1.<span class="hljs-built_in">erase</span>(<span class="hljs-number">1</span>);<br><span class="hljs-comment">//删除操作，成功返回下一个pair的迭代器</span><br>set1.<span class="hljs-built_in">erase</span>(set1.<span class="hljs-built_in">find</span>(<span class="hljs-number">1</span>));<br><span class="hljs-comment">//删除set1的所有元素，返回指向end的迭代器</span><br>set1.<span class="hljs-built_in">erase</span>(set1.<span class="hljs-built_in">begin</span>(), set1.<span class="hljs-built_in">end</span>());<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>study-linux</title>
    <link href="/2024/03/07/study-linux/"/>
    <url>/2024/03/07/study-linux/</url>
    
    <content type="html"><![CDATA[<h2 id="linux-指令"><a href="#linux-指令" class="headerlink" title="linux-指令"></a>linux-指令</h2>]]></content>
    
    
    
    <tags>
      
      <tag>Study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my new post</title>
    <link href="/2024/03/07/my-new-post/"/>
    <url>/2024/03/07/my-new-post/</url>
    
    <content type="html"><![CDATA[<h2 id="linux-指令"><a href="#linux-指令" class="headerlink" title="linux 指令"></a>linux 指令</h2><p>密码：1</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/01/23/test1/"/>
    <url>/2024/01/23/test1/</url>
    
    <content type="html"><![CDATA[<p>title: test</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/23/hello-world/"/>
    <url>/2024/01/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
